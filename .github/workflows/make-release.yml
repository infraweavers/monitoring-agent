name: Make Release

on:
  workflow_dispatch
  
jobs:

  build-release:
    strategy:
      matrix:
        go-version: [1.15.x, 1.16.x]
        os: [linux, windows, freebsd]
        arch: [386, amd64]

    runs-on: ubuntu-latest
    
    env:
        SRCPATH: ${{ github.workspace }}/go/src/monitoring-agent

    steps:
        
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
            
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ${{ env.SRCPATH }}

      - name: upload wix definition file
        uses: actions/upload-artifact@v2
        with:
          name: "${{ matrix.os }}-${{ matrix.arch }}-Go${{ matrix.go-version }}-${{ steps.short-sha.outputs.sha }}-wix-wxs"
          path: "${{ env.SRCPATH }}/monitoring-agent.wxs"

      - name: Dependencies & Build
        run: |
          os=${{ matrix.os }}
          arch=${{ matrix.arch }}
          goversion=${{ matrix.go-version }}
          echo "Building $os-$arch-$goversion"
          
          suffix=$([ "$os" == "windows" ] && echo ".exe" || echo "")
          mkdir -p ./release/$os-$arch-Go${goversion}
          cp ${{ env.SRCPATH }}/configuration.json ${{ env.SRCPATH }}/LICENSE ${{ env.SRCPATH }}/server.crt ${{ env.SRCPATH }}/server.key ${{ env.SRCPATH }}/README.md ${{ env.SRCPATH }}/cacert.pem ./release/$os-$arch-Go${goversion}
          
          pushd ${{ env.SRCPATH }}
          
          GO111MODULE=on GOOS=$os GOARCH=$arch go get ./...
          GO111MODULE=on GOOS=$os GOARCH=$arch go build -o ${{ env.SRCPATH }}/monitoring-agent$suffix
          popd
          cp ${{ env.SRCPATH }}/monitoring-agent$suffix ./release/$os-$arch-Go${goversion}/monitoring-agent$suffix
      
      - name: upload builds
        uses: actions/upload-artifact@v2
        with:
          name: "${{ matrix.os }}-${{ matrix.arch }}-Go${{ matrix.go-version }}-${{ steps.short-sha.outputs.sha }}-BIN"
          path: release/

  build-win-MSI-installer:
  
    needs: build-release

    strategy:
      matrix:
        go-version: [1.16.x]
        os: [windows]
        arch: [386, amd64]
        
    runs-on: windows-latest

    steps:
        
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7
        
      - name: Install WIX Tool Set
        run: |
          Invoke-WebRequest -UseBasicParsing -Uri https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311.exe -OutFile wix311.exe
          & ".\wix311.exe" "/q"

      - name: create download folder
        run: |
          mkdir ./download

      - name: create release folder
        run: |
          mkdir ./release

      - name: download windows builds
        uses: actions/download-artifact@v2
        with:
          name: "${{ matrix.os }}-${{ matrix.arch }}-Go${{ matrix.go-version }}-${{ steps.short-sha.outputs.sha }}-BIN"
          path: "download/${{ matrix.os }}-${{ matrix.arch }}-Go${{ matrix.go-version }}-${{ steps.short-sha.outputs.sha }}-BIN"
          
      - name: download wix definition file
        uses: actions/download-artifact@v2
        with:
          name: "${{ matrix.os }}-${{ matrix.arch }}-Go${{ matrix.go-version }}-${{ steps.short-sha.outputs.sha }}-wix-wxs"
          path: "download/${{ matrix.os }}-${{ matrix.arch }}-Go${{ matrix.go-version }}-${{ steps.short-sha.outputs.sha }}-BIN"

      - name: Create MSI Installer
        run: |
          $os="${{ matrix.os }}"
          $arch="${{ matrix.arch }}"
          $goversion="${{ matrix.go-version }}"
          
          $win_arch = "x64"
          if ($arch -eq "386") { $win_arch = "x86" }
          Write-Host "Building MSI Installer For $os-$arch-Go${goversion}"
          
          $firstCommitSha = "49cded61e36172578146ca1a7ae516540056d8b0"
          $lastCommitSha = ((Invoke-WebRequest -uri https://api.github.com/repos/infraweavers/monitoring-agent/git/refs/heads/master -UseBasicParsing).Content | ConvertFrom-Json).object.sha
          $response = Invoke-WebRequest -uri https://api.github.com/repos/infraweavers/monitoring-agent/compare/${firstCommitSha}...${lastCommitSha} -UseBasicParsing
          $msiRevisionNumber = ($response.Content | ConvertFrom-Json).total_commits
          Write-Host "MSI Revision Number is: ${msiRevisionNumber}"
          
          Push-Location -Path download\$os-$arch-Go${goversion}-${{ steps.short-sha.outputs.sha }}-BIN
          Write-Host "PATH: $((pwd).Path)"
          GCI
          & 'C:\Program Files (x86)\WiX Toolset v3.11\bin\candle.exe' .\monitoring-agent.wxs -arch $win_arch -dPlatform="$($win_arch)" -dRevisionNumber="$($msiRevisionNumber)" -dGitSha="${{ steps.short-sha.outputs.sha }}"
          & "C:\Program Files (x86)\WiX Toolset v3.11\bin\light.exe" ".\monitoring-agent.wixobj"
          Pop-Location
          
          Move-Item -Path ./download/$os-$arch-Go${goversion}-${{ steps.short-sha.outputs.sha }}-BIN/monitoring-agent.msi -Destination "./release/monitoring-agent-$win_arch-Go${goversion}-${{ steps.short-sha.outputs.sha }}.msi"
          
      - name: upload MSI
        uses: actions/upload-artifact@v2
        with:
          name: "${{ matrix.os }}-${{ matrix.arch }}-Go${{ matrix.go-version }}-${{ steps.short-sha.outputs.sha }}-MSI"
          path: release/
